[alias]

  # View the current working tree status
	s = status

	# Add files to the index and commit
	c = commit -a

	# Undo commit
	cu = reset HEAD~

  # Amend the currently staged files to the latest commit
	ca = commit -a --amend

	# Switch branches or restore working tree files
	co = checkout

	# List branches
	b = branch

	# List which branches haven't been merged into master yet
	bum = branch --no-merged master

	# Checkout a branch, creating it if necessary
	bc = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  # Delete a branch
  bd = branch -D

	# Delete branches that have already been merged with master
	bdm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

	# Clone a repository into a new directory including all submodules
  cl = clone --recursive

  # View abbrev SHA, desc, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# List aliases
	aliases = config --get-regexp alias

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

[apply]

	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]

  # Use VS Code and wait for it to launch
  editor = code -w

	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line [default]
	# space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on macOS
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true

[color]

	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]

	added = yellow
	changed = green
	untracked = cyan

[credential]

  helper = osxkeychain

[diff]

	# Detect copies as well as renames
	renames = copies
  # Use VS Code
  tool = code

[difftool]

  prompt = false

[help]

	# Automatically correct and execute mistyped commands
	autocorrect = 1

[merge]

	# Include summaries of merged commits in newly created merge commit messages
	log = true
  # Use VS Code
  tool = code

[push]

	# https://git-scm.com/docs/git-config#git-config-pushdefault
	default = simple
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true

# URL shorthands

[url "git@github.com:"]

	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]

	insteadOf = "github:"

[url "git@gist.github.com:"]

	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]

	insteadOf = "gist:"
